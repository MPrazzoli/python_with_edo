Index: static/data/finviz_financials.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import os\r\nimport time\r\nimport numpy as np\r\nimport pandas as pd\r\nfrom finvizfinance.quote import finvizfinance\r\nfrom pickle_obj.read_pickle_df import read_available_ticker_from_pickle\r\n\r\n'''\r\nThis script to fetch periodically finviz data of our stocks which are in the ticker_isin_file.xlsx\r\n\r\nInfo fetched:\r\n'Sector': 'Industrials',\r\n'Industry': 'Trucking',\r\n'Country': 'China',\r\n'P/E': '-', 42.57\r\n'EPS (ttm)': '-0.86',\r\n'Insider Own': '20.61%',\r\n'Shs Outstand': '246.62M',\r\n'Shs Float': '51.47M',\r\n'Market Cap': '936.51M',\r\n'Income': '-208.10M',\r\n'Sales': '5.16B',\r\n'Book/sh': '1.48',\r\n'P/B': '1.53',\r\n'ROA': '-6.90%',\r\n'Target Price': '-',\r\n'ROE': '-43.00%',\r\n'ROI': '-4.40%',\r\n'Employees': '8423',\r\n'Debt/Eq': '2.44',\r\n'''\r\n\r\n# Set of the project path to find also data path where the tickers list is stored in your computer\r\nproject_root = os.path.dirname(os.path.dirname(__file__))\r\ndata_path = project_root + '/data'\r\n\r\n# Getting the list of all tickers we are interested in from the ticker_isin_file.xlsx excel file,\r\n# then a StockListClass instance is initialize to store the list of tickers and the list\r\n# of isin which we insert in our excel file\r\nticker_python = pd.read_excel(data_path + '/ticker_isin_file.xlsx', sheet_name='American')\r\nticker_python.set_index('ticker', inplace=True)  # Setting the index of ticker_python DataFrame with Tickers columns\r\n\r\nticker_python['Sector'] = ''\r\nticker_python['Industry'] = ''\r\nticker_python['Country'] = ''\r\nticker_python['P/E'] = ''\r\nticker_python['EPS (ttm)'] = ''\r\nticker_python['Insider Own'] = ''\r\nticker_python['Shs Outstand'] = ''\r\nticker_python['Shs Float'] = ''\r\nticker_python['Market Cap'] = ''\r\nticker_python['Income'] = ''\r\nticker_python['Sales'] = ''\r\nticker_python['Book/sh'] = ''\r\nticker_python['P/B'] = ''\r\nticker_python['ROA'] = ''\r\nticker_python['Target Price'] = ''\r\nticker_python['ROE'] = ''\r\nticker_python['ROI'] = ''\r\nticker_python['Employees'] = ''\r\nticker_python['Debt/Eq'] = ''\r\n\r\nstart_time = time.time()\r\n\r\n# To keep tracking the api process\r\nj = 0\r\n\r\nfor i, ticker in enumerate(ticker_python.index):\r\n\r\n    try:\r\n        stock = finvizfinance(ticker)\r\n    except:continue\r\n\r\n    try:\r\n        ticker_python.at[ticker_python.index[i], 'Sector'] = stock.TickerFundament()['Sector']\r\n    except:\r\n        ticker_python.at[ticker_python.index[i], 'Sector'] = ''\r\n\r\n    try:\r\n        ticker_python.at[ticker_python.index[i], 'Industry'] = stock.TickerFundament()['Industry']\r\n    except:\r\n        ticker_python.at[ticker_python.index[i], 'Industry'] = ''\r\n\r\n    try:\r\n        ticker_python.at[ticker_python.index[i], 'Country'] = stock.TickerFundament()['Country']\r\n    except:\r\n        ticker_python.at[ticker_python.index[i], 'Country'] = ''\r\n\r\n    try:\r\n        ticker_python.at[ticker_python.index[i], 'P/E'] = float(stock.TickerFundament()['P/E'])\r\n    except:\r\n        ticker_python.at[ticker_python.index[i], 'P/E'] = ''\r\n\r\n    try:\r\n        ticker_python.at[ticker_python.index[i], 'EPS (ttm)'] = float(stock.TickerFundament()['EPS (ttm)'])\r\n    except:\r\n        ticker_python.at[ticker_python.index[i], 'EPS (ttm)'] = ''\r\n\r\n    try:\r\n        ticker_python.at[ticker_python.index[i], 'Insider Own'] = float(\r\n            stock.TickerFundament()['Insider Own'][:-1]) / 100\r\n    except:\r\n        ticker_python.at[ticker_python.index[i], 'Insider Own'] = ''\r\n\r\n    ticker_python.at[ticker_python.index[i], 'Shs Outstand'] = stock.TickerFundament()['Shs Outstand']\r\n    if ticker_python.at[ticker_python.index[i], 'Shs Outstand'][-1] == 'M':\r\n        ticker_python.at[ticker_python.index[i], 'Shs Outstand'] = float(\r\n            ticker_python.at[ticker_python.index[i], 'Shs Outstand'][:-1]) * 1000000\r\n    elif ticker_python.at[ticker_python.index[i], 'Shs Outstand'][-1] == 'B':\r\n        ticker_python.at[ticker_python.index[i], 'Shs Outstand'] = float(\r\n            ticker_python.at[ticker_python.index[i], 'Shs Outstand'][:-1]) * 1000000000\r\n    elif ticker_python.at[ticker_python.index[i], 'Shs Outstand'][-1] == 'T':\r\n        ticker_python.at[ticker_python.index[i], 'Shs Outstand'] = float(\r\n            ticker_python.at[ticker_python.index[i], 'Shs Outstand'][:-1]) * 1000000000000\r\n    elif ticker_python.at[ticker_python.index[i], 'Shs Outstand'][-1] == 'K':\r\n        ticker_python.at[ticker_python.index[i], 'Shs Outstand'] = float(\r\n            ticker_python.at[ticker_python.index[i], 'Shs Outstand'][:-1]) * 1000\r\n\r\n    ticker_python.at[ticker_python.index[i], 'Shs Float'] = stock.TickerFundament()['Shs Float']\r\n    if ticker_python.at[ticker_python.index[i], 'Shs Float'][-1] == 'M':\r\n        ticker_python.at[ticker_python.index[i], 'Shs Float'] = float(\r\n            ticker_python.at[ticker_python.index[i], 'Shs Float'][:-1]) * 1000000\r\n    elif ticker_python.at[ticker_python.index[i], 'Shs Float'][-1] == 'B':\r\n        ticker_python.at[ticker_python.index[i], 'Shs Float'] = float(\r\n            ticker_python.at[ticker_python.index[i], 'Shs Float'][:-1]) * 1000000000\r\n    elif ticker_python.at[ticker_python.index[i], 'Shs Float'][-1] == 'T':\r\n        ticker_python.at[ticker_python.index[i], 'Shs Float'] = float(\r\n            ticker_python.at[ticker_python.index[i], 'Shs Float'][:-1]) * 1000000000000\r\n    elif ticker_python.at[ticker_python.index[i], 'Shs Float'][-1] == 'K':\r\n        ticker_python.at[ticker_python.index[i], 'Shs Float'] = float(\r\n            ticker_python.at[ticker_python.index[i], 'Shs Float'][:-1]) * 1000\r\n\r\n    ticker_python.at[ticker_python.index[i], 'Market Cap'] = stock.TickerFundament()['Market Cap']\r\n    if ticker_python.at[ticker_python.index[i], 'Market Cap'][-1] == 'M':\r\n        ticker_python.at[ticker_python.index[i], 'Market Cap'] = float(\r\n            ticker_python.at[ticker_python.index[i], 'Market Cap'][:-1]) * 1000000\r\n    elif ticker_python.at[ticker_python.index[i], 'Market Cap'][-1] == 'B':\r\n        ticker_python.at[ticker_python.index[i], 'Market Cap'] = float(\r\n            ticker_python.at[ticker_python.index[i], 'Market Cap'][:-1]) * 1000000000\r\n    elif ticker_python.at[ticker_python.index[i], 'Market Cap'][-1] == 'T':\r\n        ticker_python.at[ticker_python.index[i], 'Market Cap'] = float(\r\n            ticker_python.at[ticker_python.index[i], 'Market Cap'][:-1]) * 1000000000000\r\n    elif ticker_python.at[ticker_python.index[i], 'Market Cap'][-1] == 'K':\r\n        ticker_python.at[ticker_python.index[i], 'Market Cap'] = float(\r\n            ticker_python.at[ticker_python.index[i], 'Market Cap'][:-1]) * 1000\r\n\r\n    ticker_python.at[ticker_python.index[i], 'Income'] = stock.TickerFundament()['Income']\r\n    if ticker_python.at[ticker_python.index[i], 'Income'][-1] == 'M':\r\n        ticker_python.at[ticker_python.index[i], 'Income'] = float(\r\n            ticker_python.at[ticker_python.index[i], 'Income'][:-1]) * 1000000\r\n    elif ticker_python.at[ticker_python.index[i], 'Income'][-1] == 'B':\r\n        ticker_python.at[ticker_python.index[i], 'Income'] = float(\r\n            ticker_python.at[ticker_python.index[i], 'Income'][:-1]) * 1000000000\r\n    elif ticker_python.at[ticker_python.index[i], 'Income'][-1] == 'T':\r\n        ticker_python.at[ticker_python.index[i], 'Income'] = float(\r\n            ticker_python.at[ticker_python.index[i], 'Income'][:-1]) * 1000000000000\r\n    elif ticker_python.at[ticker_python.index[i], 'Income'][-1] == 'K':\r\n        ticker_python.at[ticker_python.index[i], 'Income'] = float(\r\n            ticker_python.at[ticker_python.index[i], 'Income'][:-1]) * 1000\r\n\r\n    ticker_python.at[ticker_python.index[i], 'Sales'] = stock.TickerFundament()['Sales']\r\n    if ticker_python.at[ticker_python.index[i], 'Sales'][-1] == 'M':\r\n        ticker_python.at[ticker_python.index[i], 'Sales'] = float(\r\n            ticker_python.at[ticker_python.index[i], 'Sales'][:-1]) * 1000000\r\n    elif ticker_python.at[ticker_python.index[i], 'Sales'][-1] == 'B':\r\n        ticker_python.at[ticker_python.index[i], 'Sales'] = float(\r\n            ticker_python.at[ticker_python.index[i], 'Sales'][:-1]) * 1000000000\r\n    elif ticker_python.at[ticker_python.index[i], 'Sales'][-1] == 'T':\r\n        ticker_python.at[ticker_python.index[i], 'Sales'] = float(\r\n            ticker_python.at[ticker_python.index[i], 'Sales'][:-1]) * 1000000000000\r\n    elif ticker_python.at[ticker_python.index[i], 'Sales'][-1] == 'K':\r\n        ticker_python.at[ticker_python.index[i], 'Sales'] = float(\r\n            ticker_python.at[ticker_python.index[i], 'Sales'][:-1]) * 1000\r\n\r\n    try:\r\n        ticker_python.at[ticker_python.index[i], 'Book/sh'] = float(stock.TickerFundament()['Book/sh'])\r\n    except:\r\n        ticker_python.at[ticker_python.index[i], 'Book/sh'] = ''\r\n\r\n    try:\r\n        ticker_python.at[ticker_python.index[i], 'P/B'] = float(stock.TickerFundament()['P/B'])\r\n    except:\r\n        ticker_python.at[ticker_python.index[i], 'P/B'] = ''\r\n\r\n    try:\r\n        ticker_python.at[ticker_python.index[i], 'ROA'] = float(stock.TickerFundament()['ROA'][:-1]) / 100\r\n    except:\r\n        ticker_python.at[ticker_python.index[i], 'ROA'] = ''\r\n\r\n    try:\r\n        ticker_python.at[ticker_python.index[i], 'Target Price'] = float(stock.TickerFundament()['Target Price'])\r\n    except:\r\n        ticker_python.at[ticker_python.index[i], 'Target Price'] = ''\r\n\r\n    try:\r\n        ticker_python.at[ticker_python.index[i], 'ROE'] = float(stock.TickerFundament()['ROE'][:-1]) / 100\r\n    except:\r\n        ticker_python.at[ticker_python.index[i], 'ROE'] = ''\r\n\r\n    try:\r\n        ticker_python.at[ticker_python.index[i], 'ROI'] = float(stock.TickerFundament()['ROI'][:-1]) / 100\r\n    except:\r\n        ticker_python.at[ticker_python.index[i], 'ROI'] = ''\r\n\r\n    try:\r\n        ticker_python.at[ticker_python.index[i], 'Employees'] = int(stock.TickerFundament()['Employees'])\r\n    except:\r\n        ticker_python.at[ticker_python.index[i], 'Employees'] = ''\r\n\r\n    try:\r\n        ticker_python.at[ticker_python.index[i], 'Debt/Eq'] = float(stock.TickerFundament()['Debt/Eq'])\r\n    except:\r\n        ticker_python.at[ticker_python.index[i], 'Debt/Eq'] = ''\r\n\r\n    if (j % 50) == 0: print(j, \"--- %s seconds ---\" % (time.time() - start_time))\r\n    j += 1\r\n\r\nticker_python.reset_index(level=0, inplace=True)\r\nticker_python.to_excel(r'ticker_isin_file.xlsx', sheet_name='AmericanFinancials', index=False)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- static/data/finviz_financials.py	(revision b4e6d9479b2ebf3c6183c83e28b38f83f42266f9)
+++ static/data/finviz_financials.py	(date 1611771476597)
@@ -216,4 +216,4 @@
     j += 1
 
 ticker_python.reset_index(level=0, inplace=True)
-ticker_python.to_excel(r'ticker_isin_file.xlsx', sheet_name='AmericanFinancials', index=False)
+ticker_python.to_excel(r'ticker_isin_file_financials.xlsx', sheet_name='AmericanFinancials', index=False)
